-- Migration: Fix Article Generation Notification Trigger
-- This fixes the user profile lookup issue that was causing 406 errors
-- and improves the notification messages

-- Update the function to fix user profile lookup
CREATE OR REPLACE FUNCTION handle_article_generation()
RETURNS trigger AS $$
DECLARE
    brief_title TEXT;
    product_name TEXT;
    user_profile_data RECORD;
    super_admin_id UUID;
BEGIN
    -- Only trigger if article_content was actually added/updated and wasn't empty before
    IF NEW.article_content IS NOT NULL 
       AND NEW.article_content != '' 
       AND COALESCE(OLD.article_content, '') = '' THEN
        
        -- Get the user profile information (FIXED: up.id = NEW.user_id instead of up.user_id = NEW.user_id)
        SELECT up.id as profile_id, up.email, up.company_name
        INTO user_profile_data
        FROM user_profiles up
        WHERE up.id = NEW.user_id;
        
        -- If we can't find the user profile, skip notification
        IF user_profile_data IS NULL THEN
            RAISE NOTICE 'No user profile found for user_id: %', NEW.user_id;
            RETURN NEW;
        END IF;
        
        -- Extract brief title and product name
        brief_title := COALESCE(NEW.title, 'Article Generated');
        product_name := COALESCE(NEW.product_name, user_profile_data.company_name);
        
        -- Log the notification attempt
        RAISE NOTICE 'Triggering article generation notification for user % (profile %): %', 
            NEW.user_id, user_profile_data.profile_id, brief_title;
        
        -- Get the super admin (first admin created)
        SELECT id INTO super_admin_id
        FROM admin_profiles 
        ORDER BY created_at ASC 
        LIMIT 1;
        
        -- Create user notifications for all users in the same company
        INSERT INTO user_notifications (
            user_id,
            brief_id,
            notification_type,
            title,
            message,
            is_read,
            created_at
        )
        SELECT 
            up.id,
            NEW.id,
            'article_generated',
            'Article Generated: ' || brief_title,
            CASE 
                WHEN up.id = user_profile_data.profile_id THEN
                    'Your article "' || brief_title || '"' || 
                    CASE 
                        WHEN product_name IS NOT NULL THEN ' for ' || product_name 
                        ELSE '' 
                    END || ' has been generated and is ready for review.'
                ELSE
                    'A new article "' || brief_title || '"' || 
                    CASE 
                        WHEN product_name IS NOT NULL THEN ' for ' || product_name 
                        ELSE '' 
                    END || ' has been generated by your colleague ' || user_profile_data.email || '.'
            END,
            false,
            NOW()
        FROM user_profiles up
        WHERE up.company_name = user_profile_data.company_name;
        
        -- Create admin notifications for super admin + assigned admins
        INSERT INTO brief_approval_notifications (
            admin_id,
            brief_id,
            notification_type,
            title,
            message,
            user_email,
            user_company,
            brief_title,
            is_read,
            created_at
        )
        SELECT DISTINCT
            ap.id,
            NEW.id,
            'article_generated',
            'Article Generated: ' || brief_title,
            'Article generated by ' || user_profile_data.email || ' from ' || COALESCE(user_profile_data.company_name, 'Unknown Company') || ': "' || brief_title || '"',
            user_profile_data.email,
            user_profile_data.company_name,
            brief_title,
            false,
            NOW()
        FROM admin_profiles ap
        WHERE ap.id = super_admin_id 
           OR ap.id IN (
               SELECT aca.admin_id 
               FROM admin_client_assignments aca 
               JOIN user_profiles up_company ON aca.client_user_id = up_company.id
               WHERE up_company.company_name = user_profile_data.company_name
           );
        
        -- Log successful completion
        RAISE NOTICE 'Article generation notification completed for user % - created user notifications for company % and admin notifications', 
            user_profile_data.profile_id, user_profile_data.company_name;
        
    END IF;
    
    RETURN NEW;
EXCEPTION
    WHEN OTHERS THEN
        -- Log error but don't fail the article update
        RAISE NOTICE 'Error in article generation notification trigger: %', SQLERRM;
        RETURN NEW;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- Grant necessary permissions
GRANT EXECUTE ON FUNCTION handle_article_generation() TO service_role;

COMMENT ON FUNCTION handle_article_generation() IS 'Fixed version: Automatically sends notifications when articles are generated by Moonlit - fixes user profile lookup issue';